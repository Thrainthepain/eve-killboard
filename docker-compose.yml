version: '3.8'

services:
  backend:
    build: .
    container_name: eve-backend
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:${PORT:-5000}"
    environment:
      NODE_ENV: production
      PORT: ${PORT:-5000}
      SESSION_SECRET: ${SESSION_SECRET}
      EVE_CLIENT_ID: ${EVE_CLIENT_ID}
      EVE_SECRET_KEY: ${EVE_SECRET_KEY}
      EVE_CALLBACK_URL: ${EVE_CALLBACK_URL}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
      MONGO_URI: ${MONGO_URI:-mongodb://mongo:27017/eve_reports}
      REDIS_URL: ${REDIS_URL:-redis://:${REDIS_PASSWORD}@redis:6379}
      SENTRY_DSN: ${SENTRY_DSN:-}
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "-O-", "http://localhost:${PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  worker:
    build: .
    container_name: eve-worker
    restart: unless-stopped
    command: node workers/zkbWorker.js
    environment:
      NODE_ENV: production
      MONGO_URI: ${MONGO_URI:-mongodb://mongo:27017/eve_reports}
      REDIS_URL: ${REDIS_URL:-redis://:${REDIS_PASSWORD}@redis:6379}
      SENTRY_DSN: ${SENTRY_DSN:-}
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    container_name: eve-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      REACT_APP_API_BASE: ${API_BASE_URL:-http://localhost:5000}
    depends_on:
      - backend

  mongo:
    image: mongo:6.0
    container_name: eve-mongo
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  redis:
    image: redis:7-alpine
    container_name: eve-redis
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mongo-data:
    name: ${COMPOSE_PROJECT_NAME:-eve-report}_mongo-data
  redis-data:
    name: ${COMPOSE_PROJECT_NAME:-eve-report}_redis-data